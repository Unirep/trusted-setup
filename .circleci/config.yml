version: 2.1
workflows:
  test:
    jobs:
      - lint
      - test-backend
      # - deploy:
      #     context: cloudflare
      #     filters:
      #       branches:
      #         only:
      #           - main

# Just for reusing below
step_defs:
  - run: &node_version
      name: Set Node version
      command: |
        nvm install v18
        nvm alias default v18
        echo "nvm use default" >> $BASH_ENV
  - run: &check_version
      name: Check Node version
      command: node -v | grep v18

jobs:
  test-backend:
    resource_class: large
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - checkout
      - run: *node_version
      - run: *check_version
      - run:
          name: Install Packages
          command: yarn
      - run:
          name: Download Circuits
          command: |
            cd packages/backend
            wget https://pub-6c705682d0d84704aeda74c87d3880ec.r2.dev/circuits.tar.gz
            tar -xzf circuits.tar.gz
            rm circuits.tar.gz
      - run:
          name: Test
          command: cd packages/backend && yarn test
  lint:
    resource_class: medium
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - checkout
      - run: *node_version
      - run: *check_version
      - run:
          name: Install Packages
          command: yarn
      - run:
          name: Lint
          command: yarn lint --check
  deploy:
    resource_class: large
    machine:
      image: ubuntu-2204:2022.04.1
    steps:
      - checkout
      - run: *node_version
      - run: *check_version
      - run:
          name: Install
          command: yarn
      - run:
          name: Build backend image
          command: docker build . -t jchancehud/trusted-setup:latest
      # - run:
      #     name: Push relay image
      #     command: |
      #       echo $DOCKER_TOKEN | docker login -u jchancehud --password-stdin
      #       docker push jchancehud/zketh:latest
      #       rm /home/circleci/.docker/config.json
      - run:
          name: Build frontend
          command: yarn frontend build --mode production
      - run:
          name: Publish frontend
          command: |
            cd packages/frontend
            npx wrangler@2.1 publish
